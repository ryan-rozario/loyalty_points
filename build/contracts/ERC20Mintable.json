{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b61003360038264010000000061091461006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6109da806101076000396000f3fe6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d578063395093511461018057806340c10f19146101b957806370a08231146101f257806379cc679014610225578063983b2d56146102605780639865027514610293578063a457c2d7146102a8578063a9059cbb146102e1578063aa271e1a1461031a578063dd62ed3e1461034d575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610388565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b61039e565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356103a4565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a0381351690602001356103fb565b3480156101c557600080fd5b50610102600480360360408110156101dc57600080fd5b50600160a060020a038135169060200135610437565b3480156101fe57600080fd5b5061012b6004803603602081101561021557600080fd5b5035600160a060020a0316610457565b34801561023157600080fd5b5061025e6004803603604081101561024857600080fd5b50600160a060020a038135169060200135610472565b005b34801561026c57600080fd5b5061025e6004803603602081101561028357600080fd5b5035600160a060020a03166104bb565b34801561029f57600080fd5b5061025e6104db565b3480156102b457600080fd5b50610102600480360360408110156102cb57600080fd5b50600160a060020a0381351690602001356104e6565b3480156102ed57600080fd5b506101026004803603604081101561030457600080fd5b50600160a060020a038135169060200135610522565b34801561032657600080fd5b506101026004803603602081101561033d57600080fd5b5035600160a060020a031661052f565b34801561035957600080fd5b5061012b6004803603604081101561037057600080fd5b50600160a060020a0381358116916020013516610548565b6000610395338484610573565b50600192915050565b60025490565b60006103b18484846105ff565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103f19186916103ec908663ffffffff6106cc16565b610573565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103959185906103ec908663ffffffff6106e116565b60006104423361052f565b151561044d57600080fd5b61039583836106fa565b600160a060020a031660009081526020819052604090205490565b61047c82826107a4565b600160a060020a0382166000908152600160209081526040808320338085529252909120546104b79184916103ec908563ffffffff6106cc16565b5050565b6104c43361052f565b15156104cf57600080fd5b6104d88161084d565b50565b6104e433610895565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103959185906103ec908663ffffffff6106cc16565b60006103953384846105ff565b600061054260038363ffffffff6108dd16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561058857600080fd5b600160a060020a038316151561059d57600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561061457600080fd5b600160a060020a03831660009081526020819052604090205461063d908263ffffffff6106cc16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610672908263ffffffff6106e116565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156106db57600080fd5b50900390565b6000828201838110156106f357600080fd5b9392505050565b600160a060020a038216151561070f57600080fd5b600254610722908263ffffffff6106e116565b600255600160a060020a03821660009081526020819052604090205461074e908263ffffffff6106e116565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156107b957600080fd5b6002546107cc908263ffffffff6106cc16565b600255600160a060020a0382166000908152602081905260409020546107f8908263ffffffff6106cc16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b61085e60038263ffffffff61091416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6108a660038263ffffffff61096216565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156108f457600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561092957600080fd5b61093382826108dd565b1561093d57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561097757600080fd5b61098182826108dd565b151561098c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208119ec93063ac963c04bb3ba47e3e677b89c0402a3f19e4cb7b095c12f28ce8b0029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100c957806318160ddd1461011657806323b872dd1461013d578063395093511461018057806340c10f19146101b957806370a08231146101f257806379cc679014610225578063983b2d56146102605780639865027514610293578063a457c2d7146102a8578063a9059cbb146102e1578063aa271e1a1461031a578063dd62ed3e1461034d575b600080fd5b3480156100d557600080fd5b50610102600480360360408110156100ec57600080fd5b50600160a060020a038135169060200135610388565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061012b61039e565b60408051918252519081900360200190f35b34801561014957600080fd5b506101026004803603606081101561016057600080fd5b50600160a060020a038135811691602081013590911690604001356103a4565b34801561018c57600080fd5b50610102600480360360408110156101a357600080fd5b50600160a060020a0381351690602001356103fb565b3480156101c557600080fd5b50610102600480360360408110156101dc57600080fd5b50600160a060020a038135169060200135610437565b3480156101fe57600080fd5b5061012b6004803603602081101561021557600080fd5b5035600160a060020a0316610457565b34801561023157600080fd5b5061025e6004803603604081101561024857600080fd5b50600160a060020a038135169060200135610472565b005b34801561026c57600080fd5b5061025e6004803603602081101561028357600080fd5b5035600160a060020a03166104bb565b34801561029f57600080fd5b5061025e6104db565b3480156102b457600080fd5b50610102600480360360408110156102cb57600080fd5b50600160a060020a0381351690602001356104e6565b3480156102ed57600080fd5b506101026004803603604081101561030457600080fd5b50600160a060020a038135169060200135610522565b34801561032657600080fd5b506101026004803603602081101561033d57600080fd5b5035600160a060020a031661052f565b34801561035957600080fd5b5061012b6004803603604081101561037057600080fd5b50600160a060020a0381358116916020013516610548565b6000610395338484610573565b50600192915050565b60025490565b60006103b18484846105ff565b600160a060020a0384166000908152600160209081526040808320338085529252909120546103f19186916103ec908663ffffffff6106cc16565b610573565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103959185906103ec908663ffffffff6106e116565b60006104423361052f565b151561044d57600080fd5b61039583836106fa565b600160a060020a031660009081526020819052604090205490565b61047c82826107a4565b600160a060020a0382166000908152600160209081526040808320338085529252909120546104b79184916103ec908563ffffffff6106cc16565b5050565b6104c43361052f565b15156104cf57600080fd5b6104d88161084d565b50565b6104e433610895565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916103959185906103ec908663ffffffff6106cc16565b60006103953384846105ff565b600061054260038363ffffffff6108dd16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561058857600080fd5b600160a060020a038316151561059d57600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a038216151561061457600080fd5b600160a060020a03831660009081526020819052604090205461063d908263ffffffff6106cc16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610672908263ffffffff6106e116565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156106db57600080fd5b50900390565b6000828201838110156106f357600080fd5b9392505050565b600160a060020a038216151561070f57600080fd5b600254610722908263ffffffff6106e116565b600255600160a060020a03821660009081526020819052604090205461074e908263ffffffff6106e116565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156107b957600080fd5b6002546107cc908263ffffffff6106cc16565b600255600160a060020a0382166000908152602081905260409020546107f8908263ffffffff6106cc16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b61085e60038263ffffffff61091416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6108a660038263ffffffff61096216565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156108f457600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561092957600080fd5b61093382826108dd565b1561093d57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561097757600080fd5b61098182826108dd565b151561098c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058208119ec93063ac963c04bb3ba47e3e677b89c0402a3f19e4cb7b095c12f28ce8b0029",
  "sourceMap": "161:421:7:-;;;284:22:2;295:10;284;;;;:22;:::i;:::-;161:421:7;;694:119:2;750:21;:8;763:7;750:12;;;;;;:21;:::i;:::-;786:20;;-1:-1:-1;;;;;786:20:2;;;;;;;;694:119;:::o;268:181:1:-;-1:-1:-1;;;;;344:21:1;;;;336:30;;;;;;385:18;389:4;395:7;385:3;;;;:18;:::i;:::-;384:19;376:28;;;;;;-1:-1:-1;;;;;415:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;415:27:1;438:4;415:27;;;268:181::o;795:162::-;867:4;-1:-1:-1;;;;;891:21:1;;;;883:30;;;;;;-1:-1:-1;;;;;;930:20:1;:11;:20;;;;;;;;;;;;;;;795:162::o;161:421:7:-;;;;;;;",
  "deployedSourceMap": "161:421:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:145:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2730:145:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2730:145:6;;;;;;;;;;;;;;;;;;;;;;;;;;;925:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;925:89:6;;;;;;;;;;;;;;;;;;;;3338:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3338:224:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3338:224:6;;;;;;;;;;;;;;;;;;4076:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4076:200:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4076:200:6;;;;;;;;;452:128:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:128:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;452:128:7;;;;;;;;;1226:104:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1226:104:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1226:104:6;-1:-1:-1;;;;;1226:104:6;;;7592:242;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7592:242:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7592:242:6;;;;;;;;;;;517:90:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;517:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;517:90:2;-1:-1:-1;;;;;517:90:2;;;613:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;613:75:2;;;;4795:210:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4795:210:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4795:210:6;;;;;;;;;1957:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1957:137:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1957:137:6;;;;;;;;;404:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;404:107:2;-1:-1:-1;;;;;404:107:2;;;1661:129:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1661:129:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1661:129:6;;;;;;;;;;;2730:145;2795:4;2811:36;2820:10;2832:7;2841:5;2811:8;:36::i;:::-;-1:-1:-1;2864:4:6;2730:145;;;;:::o;925:89::-;995:12;;925:89;:::o;3338:224::-;3417:4;3433:26;3443:4;3449:2;3453:5;3433:9;:26::i;:::-;-1:-1:-1;;;;;3496:14:6;;;;;;:8;:14;;;;;;;;3484:10;3496:26;;;;;;;;;3469:65;;3478:4;;3496:37;;3527:5;3496:37;:30;:37;:::i;:::-;3469:8;:65::i;:::-;-1:-1:-1;3551:4:6;3338:224;;;;;:::o;4076:200::-;4181:10;4156:4;4202:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4202:29:6;;;;;;;;;;4156:4;;4172:76;;4193:7;;4202:45;;4236:10;4202:45;:33;:45;:::i;452:128:7:-;520:4;359:20:2;368:10;359:8;:20::i;:::-;351:29;;;;;;;;536:16:7;542:2;546:5;536;:16::i;1226:104:6:-;-1:-1:-1;;;;;1307:16:6;1281:7;1307:16;;;;;;;;;;;;1226:104::o;7592:242::-;7725:21;7731:7;7740:5;7725;:21::i;:::-;-1:-1:-1;;;;;7786:17:6;;;;;;:8;:17;;;;;;;;7774:10;7786:29;;;;;;;;;7756:71;;7765:7;;7786:40;;7820:5;7786:40;:33;:40;:::i;7756:71::-;7592:242;;:::o;517:90:2:-;359:20;368:10;359:8;:20::i;:::-;351:29;;;;;;;;581:19;592:7;581:10;:19::i;:::-;517:90;:::o;613:75::-;656:25;670:10;656:13;:25::i;:::-;613:75::o;4795:210:6:-;4905:10;4880:4;4926:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4926:29:6;;;;;;;;;;4880:4;;4896:81;;4917:7;;4926:50;;4960:15;4926:50;:33;:50;:::i;1957:137::-;2018:4;2034:32;2044:10;2056:2;2060:5;2034:9;:32::i;404:107:2:-;460:4;483:21;:8;496:7;483:21;:12;:21;:::i;:::-;476:28;404:107;-1:-1:-1;;404:107:2:o;1661:129:6:-;-1:-1:-1;;;;;1759:15:6;;;1733:7;1759:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1661:129::o;6840:248::-;-1:-1:-1;;;;;6932:21:6;;;;6924:30;;;;;;-1:-1:-1;;;;;6972:19:6;;;;6964:28;;;;;;-1:-1:-1;;;;;7003:15:6;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7050:31;;;;;;;;;;;;;;;;;6840:248;;;:::o;5224:256::-;-1:-1:-1;;;;;5311:16:6;;;;5303:25;;;;;;-1:-1:-1;;;;;5357:15:6;;:9;:15;;;;;;;;;;;:26;;5377:5;5357:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5339:15:6;;;:9;:15;;;;;;;;;;;:44;;;;5409:13;;;;;;;:24;;5427:5;5409:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5393:13:6;;;:9;:13;;;;;;;;;;;;:40;;;;5448:25;;;;;;;5393:13;;5448:25;;;;;;;;;;;;;5224:256;;;:::o;1220:145:5:-;1278:7;1305:6;;;;1297:15;;;;;;-1:-1:-1;1334:5:5;;;1220:145::o;1448:::-;1506:7;1537:5;;;1560:6;;;;1552:15;;;;;;1585:1;1448:145;-1:-1:-1;;;1448:145:5:o;5823:263:6:-;-1:-1:-1;;;;;5897:21:6;;;;5889:30;;;;;;5945:12;;:23;;5962:5;5945:23;:16;:23;:::i;:::-;5930:12;:38;-1:-1:-1;;;;;5999:18:6;;:9;:18;;;;;;;;;;;:29;;6022:5;5999:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5978:18:6;;:9;:18;;;;;;;;;;;:50;;;;6043:36;;;;;;;5978:18;;:9;;6043:36;;;;;;;;;;5823:263;;:::o;6312:::-;-1:-1:-1;;;;;6386:21:6;;;;6378:30;;;;;;6434:12;;:23;;6451:5;6434:23;:16;:23;:::i;:::-;6419:12;:38;-1:-1:-1;;;;;6488:18:6;;:9;:18;;;;;;;;;;;:29;;6511:5;6488:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6467:18:6;;:9;:18;;;;;;;;;;;:50;;;;6532:36;;;;;;;6467:9;;6532:36;;;;;;;;;;;6312:263;;:::o;694:119:2:-;750:21;:8;763:7;750:21;:12;:21;:::i;:::-;786:20;;-1:-1:-1;;;;;786:20:2;;;;;;;;694:119;:::o;819:127::-;878:24;:8;894:7;878:24;:15;:24;:::i;:::-;917:22;;-1:-1:-1;;;;;917:22:2;;;;;;;;819:127;:::o;795:162:1:-;867:4;-1:-1:-1;;;;;891:21:1;;;;883:30;;;;;;-1:-1:-1;;;;;;930:20:1;:11;:20;;;;;;;;;;;;;;;795:162::o;268:181::-;-1:-1:-1;;;;;344:21:1;;;;336:30;;;;;;385:18;389:4;395:7;385:3;:18::i;:::-;384:19;376:28;;;;;;-1:-1:-1;;;;;415:20:1;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;415:27:1;438:4;415:27;;;268:181::o;523:184::-;-1:-1:-1;;;;;602:21:1;;;;594:30;;;;;;642:18;646:4;652:7;642:3;:18::i;:::-;634:27;;;;;;;;-1:-1:-1;;;;;672:20:1;695:5;672:20;;;;;;;;;;;:28;;-1:-1:-1;;672:28:1;;;523:184::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/token/ERC20/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1269
      ]
    },
    "id": 1270,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1243,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1244,
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 1242,
        "src": "34:21:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 1245,
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 254,
        "src": "56:43:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1246,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "187:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1241",
                "typeString": "contract ERC20"
              }
            },
            "id": 1247,
            "nodeType": "InheritanceSpecifier",
            "src": "187:5:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1248,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 253,
              "src": "194:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$253",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1249,
            "nodeType": "InheritanceSpecifier",
            "src": "194:10:7"
          }
        ],
        "contractDependencies": [
          253,
          1241,
          1338
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1269,
        "linearizedBaseContracts": [
          1269,
          253,
          1241,
          1338
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "526:54:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1261,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "542:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "546:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1260,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "536:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "536:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "569:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1259,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "562:11:7"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1255,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 186,
                  "src": "500:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "500:10:7"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "466:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "478:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:27:7"
            },
            "returnParameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "520:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:6:7"
            },
            "scope": 1269,
            "src": "452:128:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1270,
        "src": "161:421:7"
      }
    ],
    "src": "0:583:7"
  },
  "legacyAST": {
    "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        1269
      ]
    },
    "id": 1270,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1243,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:7"
      },
      {
        "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1244,
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 1242,
        "src": "34:21:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ryan/dev/blockchain/loyalty_points/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 1245,
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 254,
        "src": "56:43:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1246,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1241,
              "src": "187:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1241",
                "typeString": "contract ERC20"
              }
            },
            "id": 1247,
            "nodeType": "InheritanceSpecifier",
            "src": "187:5:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1248,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 253,
              "src": "194:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$253",
                "typeString": "contract MinterRole"
              }
            },
            "id": 1249,
            "nodeType": "InheritanceSpecifier",
            "src": "194:10:7"
          }
        ],
        "contractDependencies": [
          253,
          1241,
          1338
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 1269,
        "linearizedBaseContracts": [
          1269,
          253,
          1241,
          1338
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "526:54:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1261,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "542:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "546:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1260,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "536:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "536:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "569:4:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1259,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "562:11:7"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1255,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 186,
                  "src": "500:10:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "500:10:7"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "466:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "478:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "465:27:7"
            },
            "returnParameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "520:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:6:7"
            },
            "scope": 1269,
            "src": "452:128:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1270,
        "src": "161:421:7"
      }
    ],
    "src": "0:583:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.5",
  "updatedAt": "2019-04-10T22:06:10.326Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burnFrom(address,uint256)": {
        "details": "Internal function that burns an amount of the token of a given account, deducting from the sender's allowance for said account. Uses the internal burn function. Emits an Approval event (reflecting the reduced allowance).",
        "params": {
          "account": "The account whose tokens will be burnt.",
          "value": "The amount that will be burnt."
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}